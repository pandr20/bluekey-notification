// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  username      String   @unique
  password      String   
  name          String? //Optional
  role          String
  notifications Notification[]
  services      Service[]

}

model Notification {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
//User Relation
  user       User     @relation(fields: [userId], references: [id])
  userId     String   @db.ObjectId // relation scalar field  (used in the `@relation` attribute above)
//Service relation
  service    Service  @relation(fields: [serviceId], references: [id])
  serviceId  String   @db.ObjectId
//Enum
  state      NotificationState @default(UNREAD)

  created_at DateTime @default(now())
  isRead     Boolean  @default(false)
  priority   Int      @default(0)
  message    String?  
}

model Service {
  id      String   @id @default(auto()) @map("_id") @db.ObjectId
  user    User?     @relation(fields: [userId], references: [id])
  userId  String?   @db.ObjectId // relation scalar field  (used in the `@relation` attribute above)

  notifications Notification[] //Array of notification objects. Used to query for all notifications associated with a service

  // Voyages details 
  counterpart    String?
  cp_date        DateTime?
  laycan_range   String?
  eta_load       DateTime?
  loading_port   String?
  eta_disch      DateTime?
  discharge_port String?
  freight        Float?
  status         String?
}

enum NotificationState {
  UNREAD
  READ
  PROCESSING
  COMPLETED
  // Add additional states here as needed
}